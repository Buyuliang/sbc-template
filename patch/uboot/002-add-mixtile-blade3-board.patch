diff --git a/arch/arm/lib/bootm-fdt.c b/arch/arm/lib/bootm-fdt.c
index 29020bd1c6b..4a3ee47937f 100644
--- a/arch/arm/lib/bootm-fdt.c
+++ b/arch/arm/lib/bootm-fdt.c
@@ -32,9 +32,18 @@ __weak int fdt_update_ethernet_dt(void *blob)
 }
 #endif
 
+__weak int board_fdt_fixup(void *blob)
+{
+	return 0;
+}
+
 int arch_fixup_fdt(void *blob)
 {
 	__maybe_unused int ret = 0;
+#if !defined(CONFIG_TPL_BUILD) && !defined(CONFIG_SPL_BUILD)
+	board_fdt_fixup(blob);
+#endif
+
 #if defined(CONFIG_ARMV7_NONSEC) || defined(CONFIG_OF_LIBFDT)
 	struct bd_info *bd = gd->bd;
 	int bank;
diff --git a/arch/arm/mach-rockchip/board.c b/arch/arm/mach-rockchip/board.c
index 45d9eae8700..7db8f9d87ab 100644
--- a/arch/arm/mach-rockchip/board.c
+++ b/arch/arm/mach-rockchip/board.c
@@ -23,9 +23,21 @@
 #include <asm/arch-rockchip/periph.h>
 #include <asm/arch-rockchip/misc.h>
 #include <power/regulator.h>
+#include <button.h>
 
 DECLARE_GLOBAL_DATA_PTR;
 
+__weak int rk_board_fdt_fixup(void *blob)
+{
+	return 0;
+}
+
+#define PHY_MODE_PCIE_AGGREGATION   4		/* PCIe3x4 */
+#define PHY_MODE_PCIE_NANBNB		0		/* P1:PCIe3x2  +  P0:PCIe3x2 */
+#define PHY_MODE_PCIE_NANBBI		1		/* P1:PCIe3x2  +  P0:PCIe3x1*2 */
+#define PHY_MODE_PCIE_NABINB		2		/* P1:PCIe3x1*2 + P0:PCIe3x2 */
+#define PHY_MODE_PCIE_NABIBI		3		/* P1:PCIe3x1*2 + P0:PCIe3x1*2 */
+
 #if defined(CONFIG_EFI_HAVE_CAPSULE_SUPPORT) && defined(CONFIG_EFI_PARTITION)
 
 #define DFU_ALT_BUF_LEN			SZ_1K
@@ -348,3 +360,116 @@ __weak int misc_init_r(void)
 	return ret;
 }
 #endif
+
+void get_status_pin(int *status)
+{
+    struct udevice *dev;
+    int pwrdis, ifdet;
+
+    /* Get the PWRDIS key state */
+    if (button_get_by_label("PWRDIS", &dev) == 0) {
+        pwrdis = (button_get_state(dev) == BUTTON_ON) ? 1 : 0;
+    } else {
+        pwrdis = -1;
+    }
+
+    /* Get the IFDET key status */
+    if (button_get_by_label("IFDET", &dev) == 0) {
+        ifdet = (button_get_state(dev) == BUTTON_ON) ? 1 : 0;
+    } else {
+        ifdet = -1;
+    }
+	*status = ifdet | (pwrdis << 1);
+    /* Output key state */
+    printf("PWRDIS: %d, IFDET: %d\n", pwrdis, ifdet);
+}
+
+static int fdt_fixup_pcie(void *blob)
+{
+	int pcie30phy_node, pcie3x4_node, pcie3x2_node;
+	int status;
+
+	get_status_pin(&status);
+
+	pcie30phy_node = fdt_path_offset(blob, "/phy@fee80000");
+	if (pcie30phy_node < 0) {
+		printf("Failed to get pcie30phy_node node\n");
+		return -1;
+	}
+	pcie3x4_node = fdt_path_offset(blob, "/pcie@fe150000");
+	if (pcie3x4_node < 0) {
+		printf("Failed to get pcie3x4_node node\n");
+		return -1;
+	}
+	pcie3x2_node = fdt_path_offset(blob, "/pcie@fe160000");
+	if (pcie3x2_node < 0) {
+		printf("Failed to get pcie3x2_node node\n");
+		return -1;
+	}
+
+	switch(status) {
+		case 0:
+			printf("01:EP 23:RC\n");
+			// pcie30phy
+			fdt_setprop_u32(blob, pcie30phy_node, "rockchip,pcie30-phymode", PHY_MODE_PCIE_NANBNB);
+			fdt_setprop_string(blob, pcie30phy_node, "status", "okay");
+			// pcie3x2
+			fdt_setprop_string(blob, pcie3x2_node, "status", "okay");
+			//pcie3x4
+			fdt_setprop_string(blob, pcie3x4_node, "compatible", "mixtile,miop-ep-rk3588");
+			fdt_setprop_u32(blob, pcie3x4_node, "num-lanes", 2);
+			fdt_delprop(blob, pcie3x4_node, "reset-gpios");
+			fdt_setprop_string(blob, pcie3x4_node, "status", "okay");
+			break;
+		case 1:
+			printf("4 EP\n");
+			// pcie30phy
+			fdt_setprop_u32(blob, pcie30phy_node, "rockchip,pcie30-phymode", PHY_MODE_PCIE_AGGREGATION);
+			fdt_setprop_string(blob, pcie30phy_node, "status", "okay");
+			// pcie3x4
+			fdt_setprop_string(blob, pcie3x4_node, "compatible", "mixtile,miop-ep-rk3588");
+			fdt_delprop(blob, pcie3x4_node, "reset-gpios");
+			fdt_setprop_string(blob, pcie3x4_node, "status", "okay");
+			break;
+		case 2:
+			printf("01:disabled 23:RC\n");
+			// pcie30phy
+			fdt_setprop_u32(blob, pcie30phy_node, "rockchip,pcie30-phymode", PHY_MODE_PCIE_AGGREGATION);
+			fdt_setprop_string(blob, pcie30phy_node, "status", "okay");
+			// pcie3x2
+			fdt_setprop_string(blob, pcie3x2_node, "status", "okay");
+			break;
+		case 3:
+			printf("4 RC\n");
+			// pcie30phy
+			fdt_setprop_u32(blob, pcie30phy_node, "rockchip,pcie30-phymode", PHY_MODE_PCIE_AGGREGATION);
+			fdt_setprop_string(blob, pcie30phy_node, "status", "okay");
+			// pcie3x4
+			fdt_setprop_string(blob, pcie3x4_node, "status", "okay");
+			break;
+		default:
+			printf("no find fixup_pcie status\n");
+			break;
+	}
+
+#ifdef FDT_DEBUG
+	run_command("fdt addr 0x0a100000", 0);
+	run_command("fdt list /phy@fee80000", 0);
+	run_command("fdt list /pcie@fe150000", 0);
+	run_command("fdt list /pcie@fe160000", 0);
+#endif
+	return 0;
+}
+
+int board_fdt_fixup(void *blob)
+{
+	int ret;
+
+	ret = fdt_fixup_pcie(blob);
+	if (ret) {
+		printf("rk_board_fdt_fixup fail\n");
+		return -1;
+	}
+
+	return 0;
+}
diff --git a/arch/arm/mach-rockchip/rk3588/Kconfig b/arch/arm/mach-rockchip/rk3588/Kconfig
index 90d389137ad..2e9837aeff7 100644
--- a/arch/arm/mach-rockchip/rk3588/Kconfig
+++ b/arch/arm/mach-rockchip/rk3588/Kconfig
@@ -71,6 +71,10 @@ config TARGET_ROCK5B_RK3588
 	  USB PD over USB Type-C
 	  Size: 100mm x 72mm (Pico-ITX form factor)
 
+config TARGET_MIXTILE_RK3588
+	bool "Mixtile BLADE3 RK3588 board"
+	select BOARD_LATE_INIT
+
 config ROCKCHIP_BOOT_MODE_REG
 	default 0xfd588080
 
@@ -87,5 +91,6 @@ source board/edgeble/neural-compute-module-6/Kconfig
 source board/rockchip/evb_rk3588/Kconfig
 source board/radxa/rock5a-rk3588s/Kconfig
 source board/radxa/rock5b-rk3588/Kconfig
+source board/mixtile/blade3-rk3588/Kconfig
 
 endif
diff --git a/arch/arm/dts/rk3588-mixtile-blade3-u-boot.dtsi b/arch/arm/dts/rk3588-mixtile-blade3-u-boot.dtsi
new file mode 100644
index 00000000000..171a546f331
--- /dev/null
+++ b/arch/arm/dts/rk3588-mixtile-blade3-u-boot.dtsi
@@ -0,0 +1,89 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright (c) 2023 Collabora Ltd.
+ */
+
+#include "rk3588-u-boot.dtsi"
+#include <dt-bindings/pinctrl/rockchip.h>
+#include <dt-bindings/input/input.h>
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/usb/pd.h>
+
+/ {
+	aliases {
+		mmc1 = &sdmmc;
+	};
+
+	chosen {
+		u-boot,spl-boot-order = "same-as-spl", &sdmmc, &sdhci;
+	};
+};
+
+&emmc_bus8 {
+	bootph-all;
+};
+
+&emmc_clk {
+	bootph-all;
+};
+
+&emmc_cmd {
+	bootph-all;
+};
+
+&emmc_data_strobe {
+	bootph-all;
+};
+
+&emmc_rstnout {
+	bootph-all;
+};
+
+&pinctrl {
+	bootph-all;
+};
+
+&pcfg_pull_none {
+	bootph-all;
+};
+
+&pcfg_pull_up_drv_level_2 {
+	bootph-all;
+};
+
+&pcfg_pull_up {
+	bootph-all;
+};
+
+&sdmmc {
+	bus-width = <4>;
+	status = "okay";
+};
+
+&sdmmc_bus4 {
+	bootph-all;
+};
+
+&sdmmc_clk {
+	bootph-all;
+};
+
+&sdmmc_cmd {
+	bootph-all;
+};
+
+&sdmmc_det {
+	bootph-all;
+};
+
+&sdhci {
+	cap-mmc-highspeed;
+	mmc-ddr-1_8v;
+	mmc-hs200-1_8v;
+	pinctrl-names = "default";
+	pinctrl-0 = <&emmc_bus8 &emmc_clk &emmc_cmd &emmc_data_strobe &emmc_rstnout>;
+};
+
+&uart2m0_xfer {
+	bootph-all;
+};
diff --git a/arch/arm/dts/rk3588-mixtile-blade3.dts b/arch/arm/dts/rk3588-mixtile-blade3.dts
new file mode 100644
index 00000000000..b89f2aa6f97
--- /dev/null
+++ b/arch/arm/dts/rk3588-mixtile-blade3.dts
@@ -0,0 +1,142 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+
+/dts-v1/;
+
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/input/input.h>
+#include "rk3588.dtsi"
+#include "rk3588-u-boot.dtsi"
+
+/ {
+	model = "Mixtile Blade3";
+	compatible = "mixtile,blade3", "rockchip,rk3588";
+
+	aliases {
+		mmc0 = &sdhci;
+		serial2 = &uart2;
+	};
+
+	chosen {
+		stdout-path = "serial2:1500000n8";
+	};
+
+	gpio-keys {
+		u-boot,dm-pre-reloc;
+		compatible = "gpio-keys";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pwrdis_pin &ifdet_pin>;
+
+		pwrdis {
+			u-boot,dm-pre-reloc;
+			gpios = <&gpio1 RK_PA6 GPIO_ACTIVE_HIGH>;
+			linux,code = <KEY_1>;
+			label = "PWRDIS";
+			linux,input-type = <1>;
+			debounce-interval = <10>;
+		};
+
+		ifdet {
+			u-boot,dm-pre-reloc;
+			gpios = <&gpio1 RK_PB1 GPIO_ACTIVE_HIGH>;
+			linux,code = <KEY_2>;
+			label = "IFDET";
+			linux,input-type = <1>;
+			debounce-interval = <10>;
+		};
+	};
+
+	vcc5v0_sys: vcc5v0-sys-regulator {
+		compatible = "regulator-fixed";
+		regulator-name = "vcc5v0_sys";
+		regulator-always-on;
+		regulator-boot-on;
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+	};
+};
+
+&cpu_b0 {
+	cpu-supply = <&vdd_cpu_big0_s0>;
+};
+
+&cpu_b1 {
+	cpu-supply = <&vdd_cpu_big0_s0>;
+};
+
+&cpu_b2 {
+	cpu-supply = <&vdd_cpu_big1_s0>;
+};
+
+&cpu_b3 {
+	cpu-supply = <&vdd_cpu_big1_s0>;
+};
+
+&i2c0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&i2c0m2_xfer>;
+	status = "okay";
+
+	vdd_cpu_big0_s0: regulator@42 {
+		compatible = "rockchip,rk8602";
+		reg = <0x42>;
+		fcs,suspend-voltage-selector = <1>;
+		regulator-name = "vdd_cpu_big0_s0";
+		regulator-always-on;
+		regulator-boot-on;
+		regulator-min-microvolt = <550000>;
+		regulator-max-microvolt = <1050000>;
+		regulator-ramp-delay = <2300>;
+		vin-supply = <&vcc5v0_sys>;
+
+		regulator-state-mem {
+			regulator-off-in-suspend;
+		};
+	};
+
+	vdd_cpu_big1_s0: regulator@43 {
+		compatible = "rockchip,rk8603", "rockchip,rk8602";
+		reg = <0x43>;
+		fcs,suspend-voltage-selector = <1>;
+		regulator-name = "vdd_cpu_big1_s0";
+		regulator-always-on;
+		regulator-boot-on;
+		regulator-min-microvolt = <550000>;
+		regulator-max-microvolt = <1050000>;
+		regulator-ramp-delay = <2300>;
+		vin-supply = <&vcc5v0_sys>;
+
+		regulator-state-mem {
+			regulator-off-in-suspend;
+		};
+	};
+};
+
+&pinctrl {
+	gpio {
+		pwrdis_pin: pwrdis-pin {
+			u-boot,dm-pre-reloc;
+			rockchip,pins = <1 RK_PA6 RK_FUNC_GPIO &pcfg_pull_up>;
+		};
+
+		ifdet_pin: ifdet-pin {
+			u-boot,dm-pre-reloc;
+			rockchip,pins = <1 RK_PB1 RK_FUNC_GPIO &pcfg_pull_up>;
+		};
+	};
+};
+
+&sdhci {
+	bus-width = <8>;
+	no-sdio;
+	no-sd;
+	non-removable;
+	max-frequency = <200000000>;
+	mmc-hs400-1_8v;
+	mmc-hs400-enhanced-strobe;
+	status = "okay";
+};
+
+&uart2 {
+	pinctrl-0 = <&uart2m0_xfer>;
+	status = "okay";
+};
diff --git a/board/mixtile/blade3-rk3588/Kconfig b/board/mixtile/blade3-rk3588/Kconfig
new file mode 100644
index 00000000000..a85bfc47e52
--- /dev/null
+++ b/board/mixtile/blade3-rk3588/Kconfig
@@ -0,0 +1,15 @@
+if TARGET_MIXTILE_RK3588
+
+config SYS_BOARD
+	default "blade3-rk3588"
+
+config SYS_VENDOR
+	default "mixtile"
+
+config SYS_CONFIG_NAME
+	default "blade3-rk3588"
+
+config BOARD_SPECIFIC_OPTIONS # dummy
+	def_bool y
+
+endif
diff --git a/board/mixtile/blade3-rk3588/MAINTAINERS b/board/mixtile/blade3-rk3588/MAINTAINERS
new file mode 100644
index 00000000000..cecb3e3f910
--- /dev/null
+++ b/board/mixtile/blade3-rk3588/MAINTAINERS
@@ -0,0 +1,6 @@
+BLADE3-RK3588
+M:	Eugen Hristev <eugen.hristev@collabora.com>
+S:	Maintained
+F:	board/mixtile/blade3-rk3588
+F:	include/configs/blade3-rk3588
+F:	configs/blade3-rk3588_defconfig
diff --git a/board/mixtile/blade3-rk3588/Makefile b/board/mixtile/blade3-rk3588/Makefile
new file mode 100644
index 00000000000..2668b6f89f4
--- /dev/null
+++ b/board/mixtile/blade3-rk3588/Makefile
@@ -0,0 +1,6 @@
+# SPDX-License-Identifier:     GPL-2.0+
+#
+# Copyright (c) 2022 Collabora Ltd.
+#
+
+obj-y += blade3-rk3588.o
diff --git a/board/mixtile/blade3-rk3588/blade3-rk3588.c b/board/mixtile/blade3-rk3588/blade3-rk3588.c
new file mode 100644
index 00000000000..8908d8022ca
--- /dev/null
+++ b/board/mixtile/blade3-rk3588/blade3-rk3588.c
@@ -0,0 +1,39 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright (c) 2023 Collabora Ltd.
+ */
+
+#include <fdtdec.h>
+#include <fdt_support.h>
+
+#ifdef CONFIG_OF_BOARD_SETUP
+int blade3_add_reserved_memory_fdt_nodes(void *new_blob)
+{
+	struct fdt_memory gap1 = {
+		.start = 0x3fc000000,
+		.end = 0x3fc4fffff,
+	};
+	struct fdt_memory gap2 = {
+		.start = 0x3fff00000,
+		.end = 0x3ffffffff,
+	};
+	unsigned long flags = FDTDEC_RESERVED_MEMORY_NO_MAP;
+	unsigned int ret;
+
+	/*
+	 * Inject the reserved-memory nodes into the DTS
+	 */
+	ret = fdtdec_add_reserved_memory(new_blob, "gap1", &gap1,  NULL, 0,
+					 NULL, flags);
+	if (ret)
+		return ret;
+
+	return fdtdec_add_reserved_memory(new_blob, "gap2", &gap2,  NULL, 0,
+					  NULL, flags);
+}
+
+int ft_board_setup(void *blob, struct bd_info *bd)
+{
+	return blade3_add_reserved_memory_fdt_nodes(blob);
+}
+#endif
diff --git a/configs/blade3-rk3588_defconfig b/configs/blade3-rk3588_defconfig
new file mode 100644
index 00000000000..fc65d4d2e1c
--- /dev/null
+++ b/configs/blade3-rk3588_defconfig
@@ -0,0 +1,130 @@
+CONFIG_ARM=y
+CONFIG_SKIP_LOWLEVEL_INIT=y
+CONFIG_SYS_HAS_NONCACHED_MEMORY=y
+CONFIG_COUNTER_FREQUENCY=24000000
+CONFIG_ARCH_ROCKCHIP=y
+CONFIG_TEXT_BASE=0x00a00000
+CONFIG_SYS_MALLOC_F_LEN=0x500000
+CONFIG_SPL_LIBCOMMON_SUPPORT=y
+CONFIG_SPL_LIBGENERIC_SUPPORT=y
+CONFIG_NR_DRAM_BANKS=2
+CONFIG_HAS_CUSTOM_SYS_INIT_SP_ADDR=y
+CONFIG_CUSTOM_SYS_INIT_SP_ADDR=0xc00000
+CONFIG_SF_DEFAULT_SPEED=24000000
+CONFIG_SF_DEFAULT_MODE=0x2000
+CONFIG_DEFAULT_DEVICE_TREE="rk3588-mixtile-blade3"
+CONFIG_ROCKCHIP_RK3588=y
+CONFIG_SPL_ROCKCHIP_COMMON_BOARD=y
+CONFIG_ROCKCHIP_SPI_IMAGE=y
+CONFIG_SPL_SERIAL=y
+CONFIG_SPL_STACK_R_ADDR=0x1000000
+CONFIG_TARGET_MIXTILE_RK3588=y
+CONFIG_SPL_STACK=0x1000000
+CONFIG_DEBUG_UART_BASE=0xFEB50000
+CONFIG_DEBUG_UART_CLOCK=24000000
+CONFIG_SPL_SPI_FLASH_SUPPORT=y
+CONFIG_SPL_SPI=y
+CONFIG_SYS_LOAD_ADDR=0xc00800
+CONFIG_PCI=y
+CONFIG_DEBUG_UART=y
+CONFIG_FIT=y
+CONFIG_FIT_VERBOSE=y
+CONFIG_SPL_FIT_SIGNATURE=y
+CONFIG_SPL_LOAD_FIT=y
+CONFIG_SPL_LOAD_FIT_ADDRESS=0x50000000
+CONFIG_LEGACY_IMAGE_FORMAT=y
+CONFIG_OF_BOARD_SETUP=y
+CONFIG_BOOTDELAY=0
+CONFIG_DEFAULT_FDT_FILE="rockchip/rk3588-mixtile-blade3.dtb"
+# CONFIG_DISPLAY_CPUINFO is not set
+CONFIG_DISPLAY_BOARDINFO_LATE=y
+CONFIG_SPL_MAX_SIZE=0x40000
+CONFIG_SPL_PAD_TO=0x7f8000
+CONFIG_SPL_HAS_BSS_LINKER_SECTION=y
+CONFIG_SPL_BSS_START_ADDR=0x4000000
+CONFIG_SPL_BSS_MAX_SIZE=0x4000
+# CONFIG_SPL_RAW_IMAGE_SUPPORT is not set
+# CONFIG_SPL_SHARES_INIT_SP_ADDR is not set
+CONFIG_SPL_STACK_R=y
+CONFIG_SPL_STACK_R_MALLOC_SIMPLE_LEN=0x300000
+CONFIG_SPL_ENV_SUPPORT=y
+CONFIG_SPL_RAM_SUPPORT=y
+CONFIG_SPL_SPI_LOAD=y
+CONFIG_SYS_SPI_U_BOOT_OFFS=0x60000
+CONFIG_SPL_USB_GADGET=y
+CONFIG_SPL_DFU=y
+CONFIG_SPL_ATF=y
+CONFIG_CMD_DFU=y
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_GPT=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_PCI=y
+CONFIG_CMD_USB=y
+CONFIG_CMD_ROCKUSB=y
+# CONFIG_CMD_SETEXPR is not set
+CONFIG_CMD_REGULATOR=y
+# CONFIG_SPL_DOS_PARTITION is not set
+CONFIG_SPL_OF_CONTROL=y
+CONFIG_OF_LIVE=y
+CONFIG_OF_SPL_REMOVE_PROPS="interrupt-parent assigned-clocks assigned-clock-rates assigned-clock-parents"
+CONFIG_SPL_REGMAP=y
+CONFIG_SPL_SYSCON=y
+CONFIG_BUTTON=y
+CONFIG_BUTTON_GPIO=y
+CONFIG_SPL_CLK=y
+CONFIG_DFU_RAM=y
+CONFIG_SYS_DFU_DATA_BUF_SIZE=0x200000
+# CONFIG_USB_FUNCTION_FASTBOOT is not set
+CONFIG_ROCKCHIP_GPIO=y
+CONFIG_SYS_I2C_ROCKCHIP=y
+CONFIG_MISC=y
+CONFIG_SUPPORT_EMMC_RPMB=y
+CONFIG_MMC_DW=y
+CONFIG_MMC_DW_ROCKCHIP=y
+CONFIG_MMC_SDHCI=y
+CONFIG_MMC_SDHCI_SDMA=y
+CONFIG_MMC_SDHCI_ROCKCHIP=y
+CONFIG_SPI_FLASH_MACRONIX=y
+CONFIG_SPI_FLASH_XTX=y
+CONFIG_ETH_DESIGNWARE=y
+CONFIG_RTL8169=y
+CONFIG_GMAC_ROCKCHIP=y
+CONFIG_PCIE_DW_ROCKCHIP=y
+CONFIG_PHY_ROCKCHIP_INNO_USB2=y
+CONFIG_PHY_ROCKCHIP_NANENG_COMBOPHY=y
+CONFIG_PHY_ROCKCHIP_USBDP=y
+CONFIG_SPL_PINCTRL=y
+CONFIG_REGULATOR_PWM=y
+CONFIG_PWM_ROCKCHIP=y
+CONFIG_SPL_RAM=y
+CONFIG_BAUDRATE=1500000
+CONFIG_DEBUG_UART_SHIFT=2
+CONFIG_SYS_NS16550_MEM32=y
+CONFIG_ROCKCHIP_SFC=y
+CONFIG_SYSRESET=y
+CONFIG_USB=y
+CONFIG_DM_USB_GADGET=y
+CONFIG_SPL_DM_USB_GADGET=y
+CONFIG_USB_XHCI_HCD=y
+# CONFIG_USB_XHCI_DWC3_OF_SIMPLE is not set
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_EHCI_GENERIC=y
+CONFIG_USB_OHCI_HCD=y
+CONFIG_USB_OHCI_GENERIC=y
+CONFIG_USB_DWC3=y
+CONFIG_USB_DWC3_GENERIC=y
+CONFIG_SPL_USB_DWC3_GENERIC=y
+CONFIG_USB_HOST_ETHER=y
+CONFIG_USB_ETHER_ASIX=y
+CONFIG_USB_ETHER_ASIX88179=y
+CONFIG_USB_ETHER_LAN75XX=y
+CONFIG_USB_ETHER_LAN78XX=y
+CONFIG_USB_ETHER_MCS7830=y
+CONFIG_USB_ETHER_RTL8152=y
+CONFIG_USB_ETHER_SMSC95XX=y
+CONFIG_USB_GADGET=y
+CONFIG_USB_GADGET_PRODUCT_NUM=0x350b
+CONFIG_USB_GADGET_DOWNLOAD=y
+CONFIG_USB_FUNCTION_ROCKUSB=y
+CONFIG_ERRNO_STR=y
diff --git a/include/configs/blade3-rk3588.h b/include/configs/blade3-rk3588.h
new file mode 100644
index 00000000000..74381a46e5f
--- /dev/null
+++ b/include/configs/blade3-rk3588.h
@@ -0,0 +1,15 @@
+/* SPDX-License-Identifier: GPL-2.0+ */
+/*
+ * Copyright (c) 2022 Collabora Ltd.
+ */
+
+#ifndef __MIXTILE_BLADE3_RK3588_H
+#define __MIXTILE_BLADE3_RK3588_H
+
+#define ROCKCHIP_DEVICE_SETTINGS \
+		"stdout=serial,vidconsole\0" \
+		"stderr=serial,vidconsole\0"
+
+#include <configs/rk3588_common.h>
+
+#endif /* __MIXTILE_BLADE3_RK3588_H */
